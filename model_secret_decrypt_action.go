/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the SecretDecryptAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretDecryptAction{}

// SecretDecryptAction A secret is used to encrypt plain texts and decrypt cipher texts.
type SecretDecryptAction struct {
	Expression   string `json:"expression"`
	Organization string `json:"organization"`
}

// NewSecretDecryptAction instantiates a new SecretDecryptAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretDecryptAction(expression string, organization string) *SecretDecryptAction {
	this := SecretDecryptAction{}
	this.Expression = expression
	this.Organization = organization
	return &this
}

// NewSecretDecryptActionWithDefaults instantiates a new SecretDecryptAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretDecryptActionWithDefaults() *SecretDecryptAction {
	this := SecretDecryptAction{}
	return &this
}

// GetExpression returns the Expression field value
func (o *SecretDecryptAction) GetExpression() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Expression
}

// GetExpressionOk returns a tuple with the Expression field value
// and a boolean to check if the value has been set.
func (o *SecretDecryptAction) GetExpressionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expression, true
}

// SetExpression sets field value
func (o *SecretDecryptAction) SetExpression(v string) {
	o.Expression = v
}

// GetOrganization returns the Organization field value
func (o *SecretDecryptAction) GetOrganization() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *SecretDecryptAction) GetOrganizationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *SecretDecryptAction) SetOrganization(v string) {
	o.Organization = v
}

func (o SecretDecryptAction) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretDecryptAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["expression"] = o.Expression
	toSerialize["organization"] = o.Organization
	return toSerialize, nil
}

type NullableSecretDecryptAction struct {
	value *SecretDecryptAction
	isSet bool
}

func (v NullableSecretDecryptAction) Get() *SecretDecryptAction {
	return v.value
}

func (v *NullableSecretDecryptAction) Set(val *SecretDecryptAction) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretDecryptAction) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretDecryptAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretDecryptAction(val *SecretDecryptAction) *NullableSecretDecryptAction {
	return &NullableSecretDecryptAction{value: val, isSet: true}
}

func (v NullableSecretDecryptAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretDecryptAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
