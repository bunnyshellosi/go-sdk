/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ExtendedResourceConfigItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtendedResourceConfigItem{}

// ExtendedResourceConfigItem struct for ExtendedResourceConfigItem
type ExtendedResourceConfigItem struct {
	Extended *bool `json:"extended,omitempty"`
	// The resource namespace.
	Namespace *string `json:"namespace,omitempty"`
	// The resource kind.
	Kind *string `json:"kind,omitempty"`
	// The resource name.
	Name *string `json:"name,omitempty"`
	// A list of container configs.
	Containers *map[string]ContainerConfigItem `json:"containers,omitempty"`
}

// NewExtendedResourceConfigItem instantiates a new ExtendedResourceConfigItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtendedResourceConfigItem() *ExtendedResourceConfigItem {
	this := ExtendedResourceConfigItem{}
	return &this
}

// NewExtendedResourceConfigItemWithDefaults instantiates a new ExtendedResourceConfigItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtendedResourceConfigItemWithDefaults() *ExtendedResourceConfigItem {
	this := ExtendedResourceConfigItem{}
	return &this
}

// GetExtended returns the Extended field value if set, zero value otherwise.
func (o *ExtendedResourceConfigItem) GetExtended() bool {
	if o == nil || IsNil(o.Extended) {
		var ret bool
		return ret
	}
	return *o.Extended
}

// GetExtendedOk returns a tuple with the Extended field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedResourceConfigItem) GetExtendedOk() (*bool, bool) {
	if o == nil || IsNil(o.Extended) {
		return nil, false
	}
	return o.Extended, true
}

// HasExtended returns a boolean if a field has been set.
func (o *ExtendedResourceConfigItem) HasExtended() bool {
	if o != nil && !IsNil(o.Extended) {
		return true
	}

	return false
}

// SetExtended gets a reference to the given bool and assigns it to the Extended field.
func (o *ExtendedResourceConfigItem) SetExtended(v bool) {
	o.Extended = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ExtendedResourceConfigItem) GetNamespace() string {
	if o == nil || IsNil(o.Namespace) {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedResourceConfigItem) GetNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.Namespace) {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ExtendedResourceConfigItem) HasNamespace() bool {
	if o != nil && !IsNil(o.Namespace) {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *ExtendedResourceConfigItem) SetNamespace(v string) {
	o.Namespace = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *ExtendedResourceConfigItem) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedResourceConfigItem) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *ExtendedResourceConfigItem) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *ExtendedResourceConfigItem) SetKind(v string) {
	o.Kind = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ExtendedResourceConfigItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedResourceConfigItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ExtendedResourceConfigItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ExtendedResourceConfigItem) SetName(v string) {
	o.Name = &v
}

// GetContainers returns the Containers field value if set, zero value otherwise.
func (o *ExtendedResourceConfigItem) GetContainers() map[string]ContainerConfigItem {
	if o == nil || IsNil(o.Containers) {
		var ret map[string]ContainerConfigItem
		return ret
	}
	return *o.Containers
}

// GetContainersOk returns a tuple with the Containers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtendedResourceConfigItem) GetContainersOk() (*map[string]ContainerConfigItem, bool) {
	if o == nil || IsNil(o.Containers) {
		return nil, false
	}
	return o.Containers, true
}

// HasContainers returns a boolean if a field has been set.
func (o *ExtendedResourceConfigItem) HasContainers() bool {
	if o != nil && !IsNil(o.Containers) {
		return true
	}

	return false
}

// SetContainers gets a reference to the given map[string]ContainerConfigItem and assigns it to the Containers field.
func (o *ExtendedResourceConfigItem) SetContainers(v map[string]ContainerConfigItem) {
	o.Containers = &v
}

func (o ExtendedResourceConfigItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtendedResourceConfigItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Extended) {
		toSerialize["extended"] = o.Extended
	}
	if !IsNil(o.Namespace) {
		toSerialize["namespace"] = o.Namespace
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Containers) {
		toSerialize["containers"] = o.Containers
	}
	return toSerialize, nil
}

type NullableExtendedResourceConfigItem struct {
	value *ExtendedResourceConfigItem
	isSet bool
}

func (v NullableExtendedResourceConfigItem) Get() *ExtendedResourceConfigItem {
	return v.value
}

func (v *NullableExtendedResourceConfigItem) Set(val *ExtendedResourceConfigItem) {
	v.value = val
	v.isSet = true
}

func (v NullableExtendedResourceConfigItem) IsSet() bool {
	return v.isSet
}

func (v *NullableExtendedResourceConfigItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtendedResourceConfigItem(val *ExtendedResourceConfigItem) *NullableExtendedResourceConfigItem {
	return &NullableExtendedResourceConfigItem{value: val, isSet: true}
}

func (v NullableExtendedResourceConfigItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtendedResourceConfigItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
