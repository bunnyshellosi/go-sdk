/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the EnvironmentPartialDeployAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentPartialDeployAction{}

// EnvironmentPartialDeployAction An environment holds a collection of buildable and deployable components.
type EnvironmentPartialDeployAction struct {
	IncludedDependencies       *string  `json:"includedDependencies,omitempty"`
	QueueIfSomethingInProgress *bool    `json:"queueIfSomethingInProgress,omitempty"`
	IsPartial                  *bool    `json:"isPartial,omitempty"`
	Components                 []string `json:"components,omitempty"`
}

// NewEnvironmentPartialDeployAction instantiates a new EnvironmentPartialDeployAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentPartialDeployAction() *EnvironmentPartialDeployAction {
	this := EnvironmentPartialDeployAction{}
	var includedDependencies string = "none"
	this.IncludedDependencies = &includedDependencies
	return &this
}

// NewEnvironmentPartialDeployActionWithDefaults instantiates a new EnvironmentPartialDeployAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentPartialDeployActionWithDefaults() *EnvironmentPartialDeployAction {
	this := EnvironmentPartialDeployAction{}
	var includedDependencies string = "none"
	this.IncludedDependencies = &includedDependencies
	return &this
}

// GetIncludedDependencies returns the IncludedDependencies field value if set, zero value otherwise.
func (o *EnvironmentPartialDeployAction) GetIncludedDependencies() string {
	if o == nil || IsNil(o.IncludedDependencies) {
		var ret string
		return ret
	}
	return *o.IncludedDependencies
}

// GetIncludedDependenciesOk returns a tuple with the IncludedDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentPartialDeployAction) GetIncludedDependenciesOk() (*string, bool) {
	if o == nil || IsNil(o.IncludedDependencies) {
		return nil, false
	}
	return o.IncludedDependencies, true
}

// HasIncludedDependencies returns a boolean if a field has been set.
func (o *EnvironmentPartialDeployAction) HasIncludedDependencies() bool {
	if o != nil && !IsNil(o.IncludedDependencies) {
		return true
	}

	return false
}

// SetIncludedDependencies gets a reference to the given string and assigns it to the IncludedDependencies field.
func (o *EnvironmentPartialDeployAction) SetIncludedDependencies(v string) {
	o.IncludedDependencies = &v
}

// GetQueueIfSomethingInProgress returns the QueueIfSomethingInProgress field value if set, zero value otherwise.
func (o *EnvironmentPartialDeployAction) GetQueueIfSomethingInProgress() bool {
	if o == nil || IsNil(o.QueueIfSomethingInProgress) {
		var ret bool
		return ret
	}
	return *o.QueueIfSomethingInProgress
}

// GetQueueIfSomethingInProgressOk returns a tuple with the QueueIfSomethingInProgress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentPartialDeployAction) GetQueueIfSomethingInProgressOk() (*bool, bool) {
	if o == nil || IsNil(o.QueueIfSomethingInProgress) {
		return nil, false
	}
	return o.QueueIfSomethingInProgress, true
}

// HasQueueIfSomethingInProgress returns a boolean if a field has been set.
func (o *EnvironmentPartialDeployAction) HasQueueIfSomethingInProgress() bool {
	if o != nil && !IsNil(o.QueueIfSomethingInProgress) {
		return true
	}

	return false
}

// SetQueueIfSomethingInProgress gets a reference to the given bool and assigns it to the QueueIfSomethingInProgress field.
func (o *EnvironmentPartialDeployAction) SetQueueIfSomethingInProgress(v bool) {
	o.QueueIfSomethingInProgress = &v
}

// GetIsPartial returns the IsPartial field value if set, zero value otherwise.
func (o *EnvironmentPartialDeployAction) GetIsPartial() bool {
	if o == nil || IsNil(o.IsPartial) {
		var ret bool
		return ret
	}
	return *o.IsPartial
}

// GetIsPartialOk returns a tuple with the IsPartial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentPartialDeployAction) GetIsPartialOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPartial) {
		return nil, false
	}
	return o.IsPartial, true
}

// HasIsPartial returns a boolean if a field has been set.
func (o *EnvironmentPartialDeployAction) HasIsPartial() bool {
	if o != nil && !IsNil(o.IsPartial) {
		return true
	}

	return false
}

// SetIsPartial gets a reference to the given bool and assigns it to the IsPartial field.
func (o *EnvironmentPartialDeployAction) SetIsPartial(v bool) {
	o.IsPartial = &v
}

// GetComponents returns the Components field value if set, zero value otherwise.
func (o *EnvironmentPartialDeployAction) GetComponents() []string {
	if o == nil || IsNil(o.Components) {
		var ret []string
		return ret
	}
	return o.Components
}

// GetComponentsOk returns a tuple with the Components field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentPartialDeployAction) GetComponentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Components) {
		return nil, false
	}
	return o.Components, true
}

// HasComponents returns a boolean if a field has been set.
func (o *EnvironmentPartialDeployAction) HasComponents() bool {
	if o != nil && !IsNil(o.Components) {
		return true
	}

	return false
}

// SetComponents gets a reference to the given []string and assigns it to the Components field.
func (o *EnvironmentPartialDeployAction) SetComponents(v []string) {
	o.Components = v
}

func (o EnvironmentPartialDeployAction) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentPartialDeployAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IncludedDependencies) {
		toSerialize["includedDependencies"] = o.IncludedDependencies
	}
	if !IsNil(o.QueueIfSomethingInProgress) {
		toSerialize["queueIfSomethingInProgress"] = o.QueueIfSomethingInProgress
	}
	if !IsNil(o.IsPartial) {
		toSerialize["isPartial"] = o.IsPartial
	}
	if !IsNil(o.Components) {
		toSerialize["components"] = o.Components
	}
	return toSerialize, nil
}

type NullableEnvironmentPartialDeployAction struct {
	value *EnvironmentPartialDeployAction
	isSet bool
}

func (v NullableEnvironmentPartialDeployAction) Get() *EnvironmentPartialDeployAction {
	return v.value
}

func (v *NullableEnvironmentPartialDeployAction) Set(val *EnvironmentPartialDeployAction) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentPartialDeployAction) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentPartialDeployAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentPartialDeployAction(val *EnvironmentPartialDeployAction) *NullableEnvironmentPartialDeployAction {
	return &NullableEnvironmentPartialDeployAction{value: val, isSet: true}
}

func (v NullableEnvironmentPartialDeployAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentPartialDeployAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
