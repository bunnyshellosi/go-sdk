/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// TemplateValidateAction A template holds information for generating an environment.
type TemplateValidateAction struct {
	Source *TemplateValidateActionSource `json:"source,omitempty"`
}

// NewTemplateValidateAction instantiates a new TemplateValidateAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateValidateAction() *TemplateValidateAction {
	this := TemplateValidateAction{}
	return &this
}

// NewTemplateValidateActionWithDefaults instantiates a new TemplateValidateAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateValidateActionWithDefaults() *TemplateValidateAction {
	this := TemplateValidateAction{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *TemplateValidateAction) GetSource() TemplateValidateActionSource {
	if o == nil || o.Source == nil {
		var ret TemplateValidateActionSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateValidateAction) GetSourceOk() (*TemplateValidateActionSource, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *TemplateValidateAction) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given TemplateValidateActionSource and assigns it to the Source field.
func (o *TemplateValidateAction) SetSource(v TemplateValidateActionSource) {
	o.Source = &v
}

func (o TemplateValidateAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateValidateAction struct {
	value *TemplateValidateAction
	isSet bool
}

func (v NullableTemplateValidateAction) Get() *TemplateValidateAction {
	return v.value
}

func (v *NullableTemplateValidateAction) Set(val *TemplateValidateAction) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateValidateAction) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateValidateAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateValidateAction(val *TemplateValidateAction) *NullableTemplateValidateAction {
	return &NullableTemplateValidateAction{value: val, isSet: true}
}

func (v NullableTemplateValidateAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateValidateAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
