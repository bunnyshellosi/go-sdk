/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// Primary struct for Primary
type Primary struct {
	Type                           *string        `json:"type,omitempty"`
	CreateEphemeralOnPrCreate      NullableBool   `json:"createEphemeralOnPrCreate,omitempty"`
	DestroyEphemeralOnPrClose      NullableBool   `json:"destroyEphemeralOnPrClose,omitempty"`
	EphemeralKubernetesIntegration NullableString `json:"ephemeralKubernetesIntegration,omitempty"`
}

// NewPrimary instantiates a new Primary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrimary() *Primary {
	this := Primary{}
	var type_ string = "primary"
	this.Type = &type_
	return &this
}

// NewPrimaryWithDefaults instantiates a new Primary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrimaryWithDefaults() *Primary {
	this := Primary{}
	var type_ string = "primary"
	this.Type = &type_
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *Primary) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Primary) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *Primary) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *Primary) SetType(v string) {
	o.Type = &v
}

// GetCreateEphemeralOnPrCreate returns the CreateEphemeralOnPrCreate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Primary) GetCreateEphemeralOnPrCreate() bool {
	if o == nil || o.CreateEphemeralOnPrCreate.Get() == nil {
		var ret bool
		return ret
	}
	return *o.CreateEphemeralOnPrCreate.Get()
}

// GetCreateEphemeralOnPrCreateOk returns a tuple with the CreateEphemeralOnPrCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Primary) GetCreateEphemeralOnPrCreateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreateEphemeralOnPrCreate.Get(), o.CreateEphemeralOnPrCreate.IsSet()
}

// HasCreateEphemeralOnPrCreate returns a boolean if a field has been set.
func (o *Primary) HasCreateEphemeralOnPrCreate() bool {
	if o != nil && o.CreateEphemeralOnPrCreate.IsSet() {
		return true
	}

	return false
}

// SetCreateEphemeralOnPrCreate gets a reference to the given NullableBool and assigns it to the CreateEphemeralOnPrCreate field.
func (o *Primary) SetCreateEphemeralOnPrCreate(v bool) {
	o.CreateEphemeralOnPrCreate.Set(&v)
}

// SetCreateEphemeralOnPrCreateNil sets the value for CreateEphemeralOnPrCreate to be an explicit nil
func (o *Primary) SetCreateEphemeralOnPrCreateNil() {
	o.CreateEphemeralOnPrCreate.Set(nil)
}

// UnsetCreateEphemeralOnPrCreate ensures that no value is present for CreateEphemeralOnPrCreate, not even an explicit nil
func (o *Primary) UnsetCreateEphemeralOnPrCreate() {
	o.CreateEphemeralOnPrCreate.Unset()
}

// GetDestroyEphemeralOnPrClose returns the DestroyEphemeralOnPrClose field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Primary) GetDestroyEphemeralOnPrClose() bool {
	if o == nil || o.DestroyEphemeralOnPrClose.Get() == nil {
		var ret bool
		return ret
	}
	return *o.DestroyEphemeralOnPrClose.Get()
}

// GetDestroyEphemeralOnPrCloseOk returns a tuple with the DestroyEphemeralOnPrClose field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Primary) GetDestroyEphemeralOnPrCloseOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.DestroyEphemeralOnPrClose.Get(), o.DestroyEphemeralOnPrClose.IsSet()
}

// HasDestroyEphemeralOnPrClose returns a boolean if a field has been set.
func (o *Primary) HasDestroyEphemeralOnPrClose() bool {
	if o != nil && o.DestroyEphemeralOnPrClose.IsSet() {
		return true
	}

	return false
}

// SetDestroyEphemeralOnPrClose gets a reference to the given NullableBool and assigns it to the DestroyEphemeralOnPrClose field.
func (o *Primary) SetDestroyEphemeralOnPrClose(v bool) {
	o.DestroyEphemeralOnPrClose.Set(&v)
}

// SetDestroyEphemeralOnPrCloseNil sets the value for DestroyEphemeralOnPrClose to be an explicit nil
func (o *Primary) SetDestroyEphemeralOnPrCloseNil() {
	o.DestroyEphemeralOnPrClose.Set(nil)
}

// UnsetDestroyEphemeralOnPrClose ensures that no value is present for DestroyEphemeralOnPrClose, not even an explicit nil
func (o *Primary) UnsetDestroyEphemeralOnPrClose() {
	o.DestroyEphemeralOnPrClose.Unset()
}

// GetEphemeralKubernetesIntegration returns the EphemeralKubernetesIntegration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Primary) GetEphemeralKubernetesIntegration() string {
	if o == nil || o.EphemeralKubernetesIntegration.Get() == nil {
		var ret string
		return ret
	}
	return *o.EphemeralKubernetesIntegration.Get()
}

// GetEphemeralKubernetesIntegrationOk returns a tuple with the EphemeralKubernetesIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Primary) GetEphemeralKubernetesIntegrationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EphemeralKubernetesIntegration.Get(), o.EphemeralKubernetesIntegration.IsSet()
}

// HasEphemeralKubernetesIntegration returns a boolean if a field has been set.
func (o *Primary) HasEphemeralKubernetesIntegration() bool {
	if o != nil && o.EphemeralKubernetesIntegration.IsSet() {
		return true
	}

	return false
}

// SetEphemeralKubernetesIntegration gets a reference to the given NullableString and assigns it to the EphemeralKubernetesIntegration field.
func (o *Primary) SetEphemeralKubernetesIntegration(v string) {
	o.EphemeralKubernetesIntegration.Set(&v)
}

// SetEphemeralKubernetesIntegrationNil sets the value for EphemeralKubernetesIntegration to be an explicit nil
func (o *Primary) SetEphemeralKubernetesIntegrationNil() {
	o.EphemeralKubernetesIntegration.Set(nil)
}

// UnsetEphemeralKubernetesIntegration ensures that no value is present for EphemeralKubernetesIntegration, not even an explicit nil
func (o *Primary) UnsetEphemeralKubernetesIntegration() {
	o.EphemeralKubernetesIntegration.Unset()
}

func (o Primary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.CreateEphemeralOnPrCreate.IsSet() {
		toSerialize["createEphemeralOnPrCreate"] = o.CreateEphemeralOnPrCreate.Get()
	}
	if o.DestroyEphemeralOnPrClose.IsSet() {
		toSerialize["destroyEphemeralOnPrClose"] = o.DestroyEphemeralOnPrClose.Get()
	}
	if o.EphemeralKubernetesIntegration.IsSet() {
		toSerialize["ephemeralKubernetesIntegration"] = o.EphemeralKubernetesIntegration.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePrimary struct {
	value *Primary
	isSet bool
}

func (v NullablePrimary) Get() *Primary {
	return v.value
}

func (v *NullablePrimary) Set(val *Primary) {
	v.value = val
	v.isSet = true
}

func (v NullablePrimary) IsSet() bool {
	return v.isSet
}

func (v *NullablePrimary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrimary(val *Primary) *NullablePrimary {
	return &NullablePrimary{value: val, isSet: true}
}

func (v NullablePrimary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrimary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
