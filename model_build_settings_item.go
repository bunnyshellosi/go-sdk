/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the BuildSettingsItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildSettingsItem{}

// BuildSettingsItem struct for BuildSettingsItem
type BuildSettingsItem struct {
	// Use the managed container registry.
	UseManagedRegistry *bool `json:"useManagedRegistry,omitempty"`
	// The Container Registry used for the built images.
	RegistryIntegration NullableString `json:"registryIntegration,omitempty"`
	// Use the managed builds Cluster.
	UseManagedCluster *bool `json:"useManagedCluster,omitempty"`
	// The Kubernetes integration cluster used for the image builds.
	KubernetesIntegration NullableString `json:"kubernetesIntegration,omitempty"`
	// The CPU allocated for the build runner.
	Cpu NullableString `json:"cpu,omitempty"`
	// The memory allocated for the build runner.
	Memory NullableInt32 `json:"memory,omitempty"`
	// The latest status of the build settings.
	LastStatus NullableString `json:"lastStatus,omitempty"`
	// The latest status of the build settings.
	LastError NullableString `json:"lastError,omitempty"`
}

// NewBuildSettingsItem instantiates a new BuildSettingsItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildSettingsItem() *BuildSettingsItem {
	this := BuildSettingsItem{}
	return &this
}

// NewBuildSettingsItemWithDefaults instantiates a new BuildSettingsItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildSettingsItemWithDefaults() *BuildSettingsItem {
	this := BuildSettingsItem{}
	return &this
}

// GetUseManagedRegistry returns the UseManagedRegistry field value if set, zero value otherwise.
func (o *BuildSettingsItem) GetUseManagedRegistry() bool {
	if o == nil || IsNil(o.UseManagedRegistry) {
		var ret bool
		return ret
	}
	return *o.UseManagedRegistry
}

// GetUseManagedRegistryOk returns a tuple with the UseManagedRegistry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildSettingsItem) GetUseManagedRegistryOk() (*bool, bool) {
	if o == nil || IsNil(o.UseManagedRegistry) {
		return nil, false
	}
	return o.UseManagedRegistry, true
}

// HasUseManagedRegistry returns a boolean if a field has been set.
func (o *BuildSettingsItem) HasUseManagedRegistry() bool {
	if o != nil && !IsNil(o.UseManagedRegistry) {
		return true
	}

	return false
}

// SetUseManagedRegistry gets a reference to the given bool and assigns it to the UseManagedRegistry field.
func (o *BuildSettingsItem) SetUseManagedRegistry(v bool) {
	o.UseManagedRegistry = &v
}

// GetRegistryIntegration returns the RegistryIntegration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BuildSettingsItem) GetRegistryIntegration() string {
	if o == nil || IsNil(o.RegistryIntegration.Get()) {
		var ret string
		return ret
	}
	return *o.RegistryIntegration.Get()
}

// GetRegistryIntegrationOk returns a tuple with the RegistryIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BuildSettingsItem) GetRegistryIntegrationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RegistryIntegration.Get(), o.RegistryIntegration.IsSet()
}

// HasRegistryIntegration returns a boolean if a field has been set.
func (o *BuildSettingsItem) HasRegistryIntegration() bool {
	if o != nil && o.RegistryIntegration.IsSet() {
		return true
	}

	return false
}

// SetRegistryIntegration gets a reference to the given NullableString and assigns it to the RegistryIntegration field.
func (o *BuildSettingsItem) SetRegistryIntegration(v string) {
	o.RegistryIntegration.Set(&v)
}

// SetRegistryIntegrationNil sets the value for RegistryIntegration to be an explicit nil
func (o *BuildSettingsItem) SetRegistryIntegrationNil() {
	o.RegistryIntegration.Set(nil)
}

// UnsetRegistryIntegration ensures that no value is present for RegistryIntegration, not even an explicit nil
func (o *BuildSettingsItem) UnsetRegistryIntegration() {
	o.RegistryIntegration.Unset()
}

// GetUseManagedCluster returns the UseManagedCluster field value if set, zero value otherwise.
func (o *BuildSettingsItem) GetUseManagedCluster() bool {
	if o == nil || IsNil(o.UseManagedCluster) {
		var ret bool
		return ret
	}
	return *o.UseManagedCluster
}

// GetUseManagedClusterOk returns a tuple with the UseManagedCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildSettingsItem) GetUseManagedClusterOk() (*bool, bool) {
	if o == nil || IsNil(o.UseManagedCluster) {
		return nil, false
	}
	return o.UseManagedCluster, true
}

// HasUseManagedCluster returns a boolean if a field has been set.
func (o *BuildSettingsItem) HasUseManagedCluster() bool {
	if o != nil && !IsNil(o.UseManagedCluster) {
		return true
	}

	return false
}

// SetUseManagedCluster gets a reference to the given bool and assigns it to the UseManagedCluster field.
func (o *BuildSettingsItem) SetUseManagedCluster(v bool) {
	o.UseManagedCluster = &v
}

// GetKubernetesIntegration returns the KubernetesIntegration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BuildSettingsItem) GetKubernetesIntegration() string {
	if o == nil || IsNil(o.KubernetesIntegration.Get()) {
		var ret string
		return ret
	}
	return *o.KubernetesIntegration.Get()
}

// GetKubernetesIntegrationOk returns a tuple with the KubernetesIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BuildSettingsItem) GetKubernetesIntegrationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesIntegration.Get(), o.KubernetesIntegration.IsSet()
}

// HasKubernetesIntegration returns a boolean if a field has been set.
func (o *BuildSettingsItem) HasKubernetesIntegration() bool {
	if o != nil && o.KubernetesIntegration.IsSet() {
		return true
	}

	return false
}

// SetKubernetesIntegration gets a reference to the given NullableString and assigns it to the KubernetesIntegration field.
func (o *BuildSettingsItem) SetKubernetesIntegration(v string) {
	o.KubernetesIntegration.Set(&v)
}

// SetKubernetesIntegrationNil sets the value for KubernetesIntegration to be an explicit nil
func (o *BuildSettingsItem) SetKubernetesIntegrationNil() {
	o.KubernetesIntegration.Set(nil)
}

// UnsetKubernetesIntegration ensures that no value is present for KubernetesIntegration, not even an explicit nil
func (o *BuildSettingsItem) UnsetKubernetesIntegration() {
	o.KubernetesIntegration.Unset()
}

// GetCpu returns the Cpu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BuildSettingsItem) GetCpu() string {
	if o == nil || IsNil(o.Cpu.Get()) {
		var ret string
		return ret
	}
	return *o.Cpu.Get()
}

// GetCpuOk returns a tuple with the Cpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BuildSettingsItem) GetCpuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cpu.Get(), o.Cpu.IsSet()
}

// HasCpu returns a boolean if a field has been set.
func (o *BuildSettingsItem) HasCpu() bool {
	if o != nil && o.Cpu.IsSet() {
		return true
	}

	return false
}

// SetCpu gets a reference to the given NullableString and assigns it to the Cpu field.
func (o *BuildSettingsItem) SetCpu(v string) {
	o.Cpu.Set(&v)
}

// SetCpuNil sets the value for Cpu to be an explicit nil
func (o *BuildSettingsItem) SetCpuNil() {
	o.Cpu.Set(nil)
}

// UnsetCpu ensures that no value is present for Cpu, not even an explicit nil
func (o *BuildSettingsItem) UnsetCpu() {
	o.Cpu.Unset()
}

// GetMemory returns the Memory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BuildSettingsItem) GetMemory() int32 {
	if o == nil || IsNil(o.Memory.Get()) {
		var ret int32
		return ret
	}
	return *o.Memory.Get()
}

// GetMemoryOk returns a tuple with the Memory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BuildSettingsItem) GetMemoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Memory.Get(), o.Memory.IsSet()
}

// HasMemory returns a boolean if a field has been set.
func (o *BuildSettingsItem) HasMemory() bool {
	if o != nil && o.Memory.IsSet() {
		return true
	}

	return false
}

// SetMemory gets a reference to the given NullableInt32 and assigns it to the Memory field.
func (o *BuildSettingsItem) SetMemory(v int32) {
	o.Memory.Set(&v)
}

// SetMemoryNil sets the value for Memory to be an explicit nil
func (o *BuildSettingsItem) SetMemoryNil() {
	o.Memory.Set(nil)
}

// UnsetMemory ensures that no value is present for Memory, not even an explicit nil
func (o *BuildSettingsItem) UnsetMemory() {
	o.Memory.Unset()
}

// GetLastStatus returns the LastStatus field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BuildSettingsItem) GetLastStatus() string {
	if o == nil || IsNil(o.LastStatus.Get()) {
		var ret string
		return ret
	}
	return *o.LastStatus.Get()
}

// GetLastStatusOk returns a tuple with the LastStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BuildSettingsItem) GetLastStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastStatus.Get(), o.LastStatus.IsSet()
}

// HasLastStatus returns a boolean if a field has been set.
func (o *BuildSettingsItem) HasLastStatus() bool {
	if o != nil && o.LastStatus.IsSet() {
		return true
	}

	return false
}

// SetLastStatus gets a reference to the given NullableString and assigns it to the LastStatus field.
func (o *BuildSettingsItem) SetLastStatus(v string) {
	o.LastStatus.Set(&v)
}

// SetLastStatusNil sets the value for LastStatus to be an explicit nil
func (o *BuildSettingsItem) SetLastStatusNil() {
	o.LastStatus.Set(nil)
}

// UnsetLastStatus ensures that no value is present for LastStatus, not even an explicit nil
func (o *BuildSettingsItem) UnsetLastStatus() {
	o.LastStatus.Unset()
}

// GetLastError returns the LastError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BuildSettingsItem) GetLastError() string {
	if o == nil || IsNil(o.LastError.Get()) {
		var ret string
		return ret
	}
	return *o.LastError.Get()
}

// GetLastErrorOk returns a tuple with the LastError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BuildSettingsItem) GetLastErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastError.Get(), o.LastError.IsSet()
}

// HasLastError returns a boolean if a field has been set.
func (o *BuildSettingsItem) HasLastError() bool {
	if o != nil && o.LastError.IsSet() {
		return true
	}

	return false
}

// SetLastError gets a reference to the given NullableString and assigns it to the LastError field.
func (o *BuildSettingsItem) SetLastError(v string) {
	o.LastError.Set(&v)
}

// SetLastErrorNil sets the value for LastError to be an explicit nil
func (o *BuildSettingsItem) SetLastErrorNil() {
	o.LastError.Set(nil)
}

// UnsetLastError ensures that no value is present for LastError, not even an explicit nil
func (o *BuildSettingsItem) UnsetLastError() {
	o.LastError.Unset()
}

func (o BuildSettingsItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildSettingsItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UseManagedRegistry) {
		toSerialize["useManagedRegistry"] = o.UseManagedRegistry
	}
	if o.RegistryIntegration.IsSet() {
		toSerialize["registryIntegration"] = o.RegistryIntegration.Get()
	}
	if !IsNil(o.UseManagedCluster) {
		toSerialize["useManagedCluster"] = o.UseManagedCluster
	}
	if o.KubernetesIntegration.IsSet() {
		toSerialize["kubernetesIntegration"] = o.KubernetesIntegration.Get()
	}
	if o.Cpu.IsSet() {
		toSerialize["cpu"] = o.Cpu.Get()
	}
	if o.Memory.IsSet() {
		toSerialize["memory"] = o.Memory.Get()
	}
	if o.LastStatus.IsSet() {
		toSerialize["lastStatus"] = o.LastStatus.Get()
	}
	if o.LastError.IsSet() {
		toSerialize["lastError"] = o.LastError.Get()
	}
	return toSerialize, nil
}

type NullableBuildSettingsItem struct {
	value *BuildSettingsItem
	isSet bool
}

func (v NullableBuildSettingsItem) Get() *BuildSettingsItem {
	return v.value
}

func (v *NullableBuildSettingsItem) Set(val *BuildSettingsItem) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildSettingsItem) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildSettingsItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildSettingsItem(val *BuildSettingsItem) *NullableBuildSettingsItem {
	return &NullableBuildSettingsItem{value: val, isSet: true}
}

func (v NullableBuildSettingsItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildSettingsItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
