/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// EnvironmentEditComponentsAction An environment holds a collection of buildable and deployable components.
type EnvironmentEditComponentsAction struct {
	Filter EnvironmentEditComponentsActionFilter `json:"filter"`
	Target GitInfo                               `json:"target"`
}

// NewEnvironmentEditComponentsAction instantiates a new EnvironmentEditComponentsAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentEditComponentsAction(filter EnvironmentEditComponentsActionFilter, target GitInfo) *EnvironmentEditComponentsAction {
	this := EnvironmentEditComponentsAction{}
	this.Filter = filter
	this.Target = target
	return &this
}

// NewEnvironmentEditComponentsActionWithDefaults instantiates a new EnvironmentEditComponentsAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentEditComponentsActionWithDefaults() *EnvironmentEditComponentsAction {
	this := EnvironmentEditComponentsAction{}
	return &this
}

// GetFilter returns the Filter field value
func (o *EnvironmentEditComponentsAction) GetFilter() EnvironmentEditComponentsActionFilter {
	if o == nil {
		var ret EnvironmentEditComponentsActionFilter
		return ret
	}

	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value
// and a boolean to check if the value has been set.
func (o *EnvironmentEditComponentsAction) GetFilterOk() (*EnvironmentEditComponentsActionFilter, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Filter, true
}

// SetFilter sets field value
func (o *EnvironmentEditComponentsAction) SetFilter(v EnvironmentEditComponentsActionFilter) {
	o.Filter = v
}

// GetTarget returns the Target field value
func (o *EnvironmentEditComponentsAction) GetTarget() GitInfo {
	if o == nil {
		var ret GitInfo
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *EnvironmentEditComponentsAction) GetTargetOk() (*GitInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *EnvironmentEditComponentsAction) SetTarget(v GitInfo) {
	o.Target = v
}

func (o EnvironmentEditComponentsAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["filter"] = o.Filter
	}
	if true {
		toSerialize["target"] = o.Target
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentEditComponentsAction struct {
	value *EnvironmentEditComponentsAction
	isSet bool
}

func (v NullableEnvironmentEditComponentsAction) Get() *EnvironmentEditComponentsAction {
	return v.value
}

func (v *NullableEnvironmentEditComponentsAction) Set(val *EnvironmentEditComponentsAction) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentEditComponentsAction) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentEditComponentsAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentEditComponentsAction(val *EnvironmentEditComponentsAction) *NullableEnvironmentEditComponentsAction {
	return &NullableEnvironmentEditComponentsAction{value: val, isSet: true}
}

func (v NullableEnvironmentEditComponentsAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentEditComponentsAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
