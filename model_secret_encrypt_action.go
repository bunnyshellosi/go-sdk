/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the SecretEncryptAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretEncryptAction{}

// SecretEncryptAction A secret is used to encrypt plain texts and decrypt cipher texts.
type SecretEncryptAction struct {
	PlainText    string `json:"plainText"`
	Organization string `json:"organization"`
}

// NewSecretEncryptAction instantiates a new SecretEncryptAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretEncryptAction(plainText string, organization string) *SecretEncryptAction {
	this := SecretEncryptAction{}
	this.PlainText = plainText
	this.Organization = organization
	return &this
}

// NewSecretEncryptActionWithDefaults instantiates a new SecretEncryptAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretEncryptActionWithDefaults() *SecretEncryptAction {
	this := SecretEncryptAction{}
	return &this
}

// GetPlainText returns the PlainText field value
func (o *SecretEncryptAction) GetPlainText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PlainText
}

// GetPlainTextOk returns a tuple with the PlainText field value
// and a boolean to check if the value has been set.
func (o *SecretEncryptAction) GetPlainTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlainText, true
}

// SetPlainText sets field value
func (o *SecretEncryptAction) SetPlainText(v string) {
	o.PlainText = v
}

// GetOrganization returns the Organization field value
func (o *SecretEncryptAction) GetOrganization() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *SecretEncryptAction) GetOrganizationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *SecretEncryptAction) SetOrganization(v string) {
	o.Organization = v
}

func (o SecretEncryptAction) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretEncryptAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["plainText"] = o.PlainText
	toSerialize["organization"] = o.Organization
	return toSerialize, nil
}

type NullableSecretEncryptAction struct {
	value *SecretEncryptAction
	isSet bool
}

func (v NullableSecretEncryptAction) Get() *SecretEncryptAction {
	return v.value
}

func (v *NullableSecretEncryptAction) Set(val *SecretEncryptAction) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretEncryptAction) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretEncryptAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretEncryptAction(val *SecretEncryptAction) *NullableSecretEncryptAction {
	return &NullableSecretEncryptAction{value: val, isSet: true}
}

func (v NullableSecretEncryptAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretEncryptAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
