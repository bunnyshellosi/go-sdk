/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// ValidateSourceString struct for ValidateSourceString
type ValidateSourceString struct {
	Type                      *string        `json:"type,omitempty"`
	BunnyshellYaml            string         `json:"bunnyshellYaml"`
	TemplateYaml              string         `json:"templateYaml"`
	ValidateComponents        *bool          `json:"validateComponents,omitempty"`
	ValidateForOrganizationId NullableString `json:"validateForOrganizationId,omitempty"`
}

// NewValidateSourceString instantiates a new ValidateSourceString object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidateSourceString(bunnyshellYaml string, templateYaml string) *ValidateSourceString {
	this := ValidateSourceString{}
	var type_ string = "string"
	this.Type = &type_
	this.BunnyshellYaml = bunnyshellYaml
	this.TemplateYaml = templateYaml
	return &this
}

// NewValidateSourceStringWithDefaults instantiates a new ValidateSourceString object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidateSourceStringWithDefaults() *ValidateSourceString {
	this := ValidateSourceString{}
	var type_ string = "string"
	this.Type = &type_
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ValidateSourceString) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateSourceString) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ValidateSourceString) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ValidateSourceString) SetType(v string) {
	o.Type = &v
}

// GetBunnyshellYaml returns the BunnyshellYaml field value
func (o *ValidateSourceString) GetBunnyshellYaml() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BunnyshellYaml
}

// GetBunnyshellYamlOk returns a tuple with the BunnyshellYaml field value
// and a boolean to check if the value has been set.
func (o *ValidateSourceString) GetBunnyshellYamlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BunnyshellYaml, true
}

// SetBunnyshellYaml sets field value
func (o *ValidateSourceString) SetBunnyshellYaml(v string) {
	o.BunnyshellYaml = v
}

// GetTemplateYaml returns the TemplateYaml field value
func (o *ValidateSourceString) GetTemplateYaml() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemplateYaml
}

// GetTemplateYamlOk returns a tuple with the TemplateYaml field value
// and a boolean to check if the value has been set.
func (o *ValidateSourceString) GetTemplateYamlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateYaml, true
}

// SetTemplateYaml sets field value
func (o *ValidateSourceString) SetTemplateYaml(v string) {
	o.TemplateYaml = v
}

// GetValidateComponents returns the ValidateComponents field value if set, zero value otherwise.
func (o *ValidateSourceString) GetValidateComponents() bool {
	if o == nil || o.ValidateComponents == nil {
		var ret bool
		return ret
	}
	return *o.ValidateComponents
}

// GetValidateComponentsOk returns a tuple with the ValidateComponents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateSourceString) GetValidateComponentsOk() (*bool, bool) {
	if o == nil || o.ValidateComponents == nil {
		return nil, false
	}
	return o.ValidateComponents, true
}

// HasValidateComponents returns a boolean if a field has been set.
func (o *ValidateSourceString) HasValidateComponents() bool {
	if o != nil && o.ValidateComponents != nil {
		return true
	}

	return false
}

// SetValidateComponents gets a reference to the given bool and assigns it to the ValidateComponents field.
func (o *ValidateSourceString) SetValidateComponents(v bool) {
	o.ValidateComponents = &v
}

// GetValidateForOrganizationId returns the ValidateForOrganizationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ValidateSourceString) GetValidateForOrganizationId() string {
	if o == nil || o.ValidateForOrganizationId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ValidateForOrganizationId.Get()
}

// GetValidateForOrganizationIdOk returns a tuple with the ValidateForOrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ValidateSourceString) GetValidateForOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValidateForOrganizationId.Get(), o.ValidateForOrganizationId.IsSet()
}

// HasValidateForOrganizationId returns a boolean if a field has been set.
func (o *ValidateSourceString) HasValidateForOrganizationId() bool {
	if o != nil && o.ValidateForOrganizationId.IsSet() {
		return true
	}

	return false
}

// SetValidateForOrganizationId gets a reference to the given NullableString and assigns it to the ValidateForOrganizationId field.
func (o *ValidateSourceString) SetValidateForOrganizationId(v string) {
	o.ValidateForOrganizationId.Set(&v)
}

// SetValidateForOrganizationIdNil sets the value for ValidateForOrganizationId to be an explicit nil
func (o *ValidateSourceString) SetValidateForOrganizationIdNil() {
	o.ValidateForOrganizationId.Set(nil)
}

// UnsetValidateForOrganizationId ensures that no value is present for ValidateForOrganizationId, not even an explicit nil
func (o *ValidateSourceString) UnsetValidateForOrganizationId() {
	o.ValidateForOrganizationId.Unset()
}

func (o ValidateSourceString) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["bunnyshellYaml"] = o.BunnyshellYaml
	}
	if true {
		toSerialize["templateYaml"] = o.TemplateYaml
	}
	if o.ValidateComponents != nil {
		toSerialize["validateComponents"] = o.ValidateComponents
	}
	if o.ValidateForOrganizationId.IsSet() {
		toSerialize["validateForOrganizationId"] = o.ValidateForOrganizationId.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableValidateSourceString struct {
	value *ValidateSourceString
	isSet bool
}

func (v NullableValidateSourceString) Get() *ValidateSourceString {
	return v.value
}

func (v *NullableValidateSourceString) Set(val *ValidateSourceString) {
	v.value = val
	v.isSet = true
}

func (v NullableValidateSourceString) IsSet() bool {
	return v.isSet
}

func (v *NullableValidateSourceString) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidateSourceString(val *ValidateSourceString) *NullableValidateSourceString {
	return &NullableValidateSourceString{value: val, isSet: true}
}

func (v NullableValidateSourceString) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidateSourceString) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
