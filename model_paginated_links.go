/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the PaginatedLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatedLinks{}

// PaginatedLinks struct for PaginatedLinks
type PaginatedLinks struct {
	Self  *PaginatedLink        `json:"self,omitempty"`
	First NullablePaginatedLink `json:"first,omitempty"`
	Prev  NullablePaginatedLink `json:"prev,omitempty"`
	Next  NullablePaginatedLink `json:"next,omitempty"`
	Last  NullablePaginatedLink `json:"last,omitempty"`
	Item  []PaginatedLink       `json:"item,omitempty"`
}

// NewPaginatedLinks instantiates a new PaginatedLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedLinks() *PaginatedLinks {
	this := PaginatedLinks{}
	return &this
}

// NewPaginatedLinksWithDefaults instantiates a new PaginatedLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedLinksWithDefaults() *PaginatedLinks {
	this := PaginatedLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *PaginatedLinks) GetSelf() PaginatedLink {
	if o == nil || IsNil(o.Self) {
		var ret PaginatedLink
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedLinks) GetSelfOk() (*PaginatedLink, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *PaginatedLinks) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given PaginatedLink and assigns it to the Self field.
func (o *PaginatedLinks) SetSelf(v PaginatedLink) {
	o.Self = &v
}

// GetFirst returns the First field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginatedLinks) GetFirst() PaginatedLink {
	if o == nil || IsNil(o.First.Get()) {
		var ret PaginatedLink
		return ret
	}
	return *o.First.Get()
}

// GetFirstOk returns a tuple with the First field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginatedLinks) GetFirstOk() (*PaginatedLink, bool) {
	if o == nil {
		return nil, false
	}
	return o.First.Get(), o.First.IsSet()
}

// HasFirst returns a boolean if a field has been set.
func (o *PaginatedLinks) HasFirst() bool {
	if o != nil && o.First.IsSet() {
		return true
	}

	return false
}

// SetFirst gets a reference to the given NullablePaginatedLink and assigns it to the First field.
func (o *PaginatedLinks) SetFirst(v PaginatedLink) {
	o.First.Set(&v)
}

// SetFirstNil sets the value for First to be an explicit nil
func (o *PaginatedLinks) SetFirstNil() {
	o.First.Set(nil)
}

// UnsetFirst ensures that no value is present for First, not even an explicit nil
func (o *PaginatedLinks) UnsetFirst() {
	o.First.Unset()
}

// GetPrev returns the Prev field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginatedLinks) GetPrev() PaginatedLink {
	if o == nil || IsNil(o.Prev.Get()) {
		var ret PaginatedLink
		return ret
	}
	return *o.Prev.Get()
}

// GetPrevOk returns a tuple with the Prev field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginatedLinks) GetPrevOk() (*PaginatedLink, bool) {
	if o == nil {
		return nil, false
	}
	return o.Prev.Get(), o.Prev.IsSet()
}

// HasPrev returns a boolean if a field has been set.
func (o *PaginatedLinks) HasPrev() bool {
	if o != nil && o.Prev.IsSet() {
		return true
	}

	return false
}

// SetPrev gets a reference to the given NullablePaginatedLink and assigns it to the Prev field.
func (o *PaginatedLinks) SetPrev(v PaginatedLink) {
	o.Prev.Set(&v)
}

// SetPrevNil sets the value for Prev to be an explicit nil
func (o *PaginatedLinks) SetPrevNil() {
	o.Prev.Set(nil)
}

// UnsetPrev ensures that no value is present for Prev, not even an explicit nil
func (o *PaginatedLinks) UnsetPrev() {
	o.Prev.Unset()
}

// GetNext returns the Next field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginatedLinks) GetNext() PaginatedLink {
	if o == nil || IsNil(o.Next.Get()) {
		var ret PaginatedLink
		return ret
	}
	return *o.Next.Get()
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginatedLinks) GetNextOk() (*PaginatedLink, bool) {
	if o == nil {
		return nil, false
	}
	return o.Next.Get(), o.Next.IsSet()
}

// HasNext returns a boolean if a field has been set.
func (o *PaginatedLinks) HasNext() bool {
	if o != nil && o.Next.IsSet() {
		return true
	}

	return false
}

// SetNext gets a reference to the given NullablePaginatedLink and assigns it to the Next field.
func (o *PaginatedLinks) SetNext(v PaginatedLink) {
	o.Next.Set(&v)
}

// SetNextNil sets the value for Next to be an explicit nil
func (o *PaginatedLinks) SetNextNil() {
	o.Next.Set(nil)
}

// UnsetNext ensures that no value is present for Next, not even an explicit nil
func (o *PaginatedLinks) UnsetNext() {
	o.Next.Unset()
}

// GetLast returns the Last field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PaginatedLinks) GetLast() PaginatedLink {
	if o == nil || IsNil(o.Last.Get()) {
		var ret PaginatedLink
		return ret
	}
	return *o.Last.Get()
}

// GetLastOk returns a tuple with the Last field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PaginatedLinks) GetLastOk() (*PaginatedLink, bool) {
	if o == nil {
		return nil, false
	}
	return o.Last.Get(), o.Last.IsSet()
}

// HasLast returns a boolean if a field has been set.
func (o *PaginatedLinks) HasLast() bool {
	if o != nil && o.Last.IsSet() {
		return true
	}

	return false
}

// SetLast gets a reference to the given NullablePaginatedLink and assigns it to the Last field.
func (o *PaginatedLinks) SetLast(v PaginatedLink) {
	o.Last.Set(&v)
}

// SetLastNil sets the value for Last to be an explicit nil
func (o *PaginatedLinks) SetLastNil() {
	o.Last.Set(nil)
}

// UnsetLast ensures that no value is present for Last, not even an explicit nil
func (o *PaginatedLinks) UnsetLast() {
	o.Last.Unset()
}

// GetItem returns the Item field value if set, zero value otherwise.
func (o *PaginatedLinks) GetItem() []PaginatedLink {
	if o == nil || IsNil(o.Item) {
		var ret []PaginatedLink
		return ret
	}
	return o.Item
}

// GetItemOk returns a tuple with the Item field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedLinks) GetItemOk() ([]PaginatedLink, bool) {
	if o == nil || IsNil(o.Item) {
		return nil, false
	}
	return o.Item, true
}

// HasItem returns a boolean if a field has been set.
func (o *PaginatedLinks) HasItem() bool {
	if o != nil && !IsNil(o.Item) {
		return true
	}

	return false
}

// SetItem gets a reference to the given []PaginatedLink and assigns it to the Item field.
func (o *PaginatedLinks) SetItem(v []PaginatedLink) {
	o.Item = v
}

func (o PaginatedLinks) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatedLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if o.First.IsSet() {
		toSerialize["first"] = o.First.Get()
	}
	if o.Prev.IsSet() {
		toSerialize["prev"] = o.Prev.Get()
	}
	if o.Next.IsSet() {
		toSerialize["next"] = o.Next.Get()
	}
	if o.Last.IsSet() {
		toSerialize["last"] = o.Last.Get()
	}
	if !IsNil(o.Item) {
		toSerialize["item"] = o.Item
	}
	return toSerialize, nil
}

type NullablePaginatedLinks struct {
	value *PaginatedLinks
	isSet bool
}

func (v NullablePaginatedLinks) Get() *PaginatedLinks {
	return v.value
}

func (v *NullablePaginatedLinks) Set(val *PaginatedLinks) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedLinks) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedLinks(val *PaginatedLinks) *NullablePaginatedLinks {
	return &NullablePaginatedLinks{value: val, isSet: true}
}

func (v NullablePaginatedLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
