/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the PrimaryOptionsCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrimaryOptionsCreate{}

// PrimaryOptionsCreate struct for PrimaryOptionsCreate
type PrimaryOptionsCreate struct {
	WhitelistEnabled *bool          `json:"whitelistEnabled,omitempty"`
	BranchWhitelist  NullableString `json:"branchWhitelist,omitempty"`
}

// NewPrimaryOptionsCreate instantiates a new PrimaryOptionsCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrimaryOptionsCreate() *PrimaryOptionsCreate {
	this := PrimaryOptionsCreate{}
	return &this
}

// NewPrimaryOptionsCreateWithDefaults instantiates a new PrimaryOptionsCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrimaryOptionsCreateWithDefaults() *PrimaryOptionsCreate {
	this := PrimaryOptionsCreate{}
	return &this
}

// GetWhitelistEnabled returns the WhitelistEnabled field value if set, zero value otherwise.
func (o *PrimaryOptionsCreate) GetWhitelistEnabled() bool {
	if o == nil || IsNil(o.WhitelistEnabled) {
		var ret bool
		return ret
	}
	return *o.WhitelistEnabled
}

// GetWhitelistEnabledOk returns a tuple with the WhitelistEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrimaryOptionsCreate) GetWhitelistEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.WhitelistEnabled) {
		return nil, false
	}
	return o.WhitelistEnabled, true
}

// HasWhitelistEnabled returns a boolean if a field has been set.
func (o *PrimaryOptionsCreate) HasWhitelistEnabled() bool {
	if o != nil && !IsNil(o.WhitelistEnabled) {
		return true
	}

	return false
}

// SetWhitelistEnabled gets a reference to the given bool and assigns it to the WhitelistEnabled field.
func (o *PrimaryOptionsCreate) SetWhitelistEnabled(v bool) {
	o.WhitelistEnabled = &v
}

// GetBranchWhitelist returns the BranchWhitelist field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PrimaryOptionsCreate) GetBranchWhitelist() string {
	if o == nil || IsNil(o.BranchWhitelist.Get()) {
		var ret string
		return ret
	}
	return *o.BranchWhitelist.Get()
}

// GetBranchWhitelistOk returns a tuple with the BranchWhitelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PrimaryOptionsCreate) GetBranchWhitelistOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BranchWhitelist.Get(), o.BranchWhitelist.IsSet()
}

// HasBranchWhitelist returns a boolean if a field has been set.
func (o *PrimaryOptionsCreate) HasBranchWhitelist() bool {
	if o != nil && o.BranchWhitelist.IsSet() {
		return true
	}

	return false
}

// SetBranchWhitelist gets a reference to the given NullableString and assigns it to the BranchWhitelist field.
func (o *PrimaryOptionsCreate) SetBranchWhitelist(v string) {
	o.BranchWhitelist.Set(&v)
}

// SetBranchWhitelistNil sets the value for BranchWhitelist to be an explicit nil
func (o *PrimaryOptionsCreate) SetBranchWhitelistNil() {
	o.BranchWhitelist.Set(nil)
}

// UnsetBranchWhitelist ensures that no value is present for BranchWhitelist, not even an explicit nil
func (o *PrimaryOptionsCreate) UnsetBranchWhitelist() {
	o.BranchWhitelist.Unset()
}

func (o PrimaryOptionsCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrimaryOptionsCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WhitelistEnabled) {
		toSerialize["whitelistEnabled"] = o.WhitelistEnabled
	}
	if o.BranchWhitelist.IsSet() {
		toSerialize["branchWhitelist"] = o.BranchWhitelist.Get()
	}
	return toSerialize, nil
}

type NullablePrimaryOptionsCreate struct {
	value *PrimaryOptionsCreate
	isSet bool
}

func (v NullablePrimaryOptionsCreate) Get() *PrimaryOptionsCreate {
	return v.value
}

func (v *NullablePrimaryOptionsCreate) Set(val *PrimaryOptionsCreate) {
	v.value = val
	v.isSet = true
}

func (v NullablePrimaryOptionsCreate) IsSet() bool {
	return v.isSet
}

func (v *NullablePrimaryOptionsCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrimaryOptionsCreate(val *PrimaryOptionsCreate) *NullablePrimaryOptionsCreate {
	return &NullablePrimaryOptionsCreate{value: val, isSet: true}
}

func (v NullablePrimaryOptionsCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrimaryOptionsCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
