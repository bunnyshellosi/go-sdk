/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: api+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// UserWrapperKubeConfigRead struct for UserWrapperKubeConfigRead
type UserWrapperKubeConfigRead struct {
	Name string              `json:"name"`
	User *UserKubeConfigRead `json:"user,omitempty"`
}

// NewUserWrapperKubeConfigRead instantiates a new UserWrapperKubeConfigRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserWrapperKubeConfigRead(name string) *UserWrapperKubeConfigRead {
	this := UserWrapperKubeConfigRead{}
	this.Name = name
	return &this
}

// NewUserWrapperKubeConfigReadWithDefaults instantiates a new UserWrapperKubeConfigRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserWrapperKubeConfigReadWithDefaults() *UserWrapperKubeConfigRead {
	this := UserWrapperKubeConfigRead{}
	return &this
}

// GetName returns the Name field value
func (o *UserWrapperKubeConfigRead) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UserWrapperKubeConfigRead) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UserWrapperKubeConfigRead) SetName(v string) {
	o.Name = v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *UserWrapperKubeConfigRead) GetUser() UserKubeConfigRead {
	if o == nil || o.User == nil {
		var ret UserKubeConfigRead
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserWrapperKubeConfigRead) GetUserOk() (*UserKubeConfigRead, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *UserWrapperKubeConfigRead) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given UserKubeConfigRead and assigns it to the User field.
func (o *UserWrapperKubeConfigRead) SetUser(v UserKubeConfigRead) {
	o.User = &v
}

func (o UserWrapperKubeConfigRead) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullableUserWrapperKubeConfigRead struct {
	value *UserWrapperKubeConfigRead
	isSet bool
}

func (v NullableUserWrapperKubeConfigRead) Get() *UserWrapperKubeConfigRead {
	return v.value
}

func (v *NullableUserWrapperKubeConfigRead) Set(val *UserWrapperKubeConfigRead) {
	v.value = val
	v.isSet = true
}

func (v NullableUserWrapperKubeConfigRead) IsSet() bool {
	return v.isSet
}

func (v *NullableUserWrapperKubeConfigRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserWrapperKubeConfigRead(val *UserWrapperKubeConfigRead) *NullableUserWrapperKubeConfigRead {
	return &NullableUserWrapperKubeConfigRead{value: val, isSet: true}
}

func (v NullableUserWrapperKubeConfigRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserWrapperKubeConfigRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
