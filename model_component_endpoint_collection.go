/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ComponentEndpointCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ComponentEndpointCollection{}

// ComponentEndpointCollection Endpoint
type ComponentEndpointCollection struct {
	// Service component identifier
	Id *string `json:"id,omitempty"`
	// Service component name
	Name *string `json:"name,omitempty"`
	// Service component URLs
	Endpoints []string `json:"endpoints,omitempty"`
	// Environment identifier.
	Environment *string `json:"environment,omitempty"`
}

// NewComponentEndpointCollection instantiates a new ComponentEndpointCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponentEndpointCollection() *ComponentEndpointCollection {
	this := ComponentEndpointCollection{}
	return &this
}

// NewComponentEndpointCollectionWithDefaults instantiates a new ComponentEndpointCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentEndpointCollectionWithDefaults() *ComponentEndpointCollection {
	this := ComponentEndpointCollection{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ComponentEndpointCollection) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentEndpointCollection) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ComponentEndpointCollection) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ComponentEndpointCollection) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ComponentEndpointCollection) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentEndpointCollection) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ComponentEndpointCollection) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ComponentEndpointCollection) SetName(v string) {
	o.Name = &v
}

// GetEndpoints returns the Endpoints field value if set, zero value otherwise.
func (o *ComponentEndpointCollection) GetEndpoints() []string {
	if o == nil || IsNil(o.Endpoints) {
		var ret []string
		return ret
	}
	return o.Endpoints
}

// GetEndpointsOk returns a tuple with the Endpoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentEndpointCollection) GetEndpointsOk() ([]string, bool) {
	if o == nil || IsNil(o.Endpoints) {
		return nil, false
	}
	return o.Endpoints, true
}

// HasEndpoints returns a boolean if a field has been set.
func (o *ComponentEndpointCollection) HasEndpoints() bool {
	if o != nil && !IsNil(o.Endpoints) {
		return true
	}

	return false
}

// SetEndpoints gets a reference to the given []string and assigns it to the Endpoints field.
func (o *ComponentEndpointCollection) SetEndpoints(v []string) {
	o.Endpoints = v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *ComponentEndpointCollection) GetEnvironment() string {
	if o == nil || IsNil(o.Environment) {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComponentEndpointCollection) GetEnvironmentOk() (*string, bool) {
	if o == nil || IsNil(o.Environment) {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *ComponentEndpointCollection) HasEnvironment() bool {
	if o != nil && !IsNil(o.Environment) {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *ComponentEndpointCollection) SetEnvironment(v string) {
	o.Environment = &v
}

func (o ComponentEndpointCollection) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ComponentEndpointCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Endpoints) {
		toSerialize["endpoints"] = o.Endpoints
	}
	if !IsNil(o.Environment) {
		toSerialize["environment"] = o.Environment
	}
	return toSerialize, nil
}

type NullableComponentEndpointCollection struct {
	value *ComponentEndpointCollection
	isSet bool
}

func (v NullableComponentEndpointCollection) Get() *ComponentEndpointCollection {
	return v.value
}

func (v *NullableComponentEndpointCollection) Set(val *ComponentEndpointCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableComponentEndpointCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableComponentEndpointCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponentEndpointCollection(val *ComponentEndpointCollection) *NullableComponentEndpointCollection {
	return &NullableComponentEndpointCollection{value: val, isSet: true}
}

func (v NullableComponentEndpointCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponentEndpointCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
