/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// TemplateItem A template holds information for generating an environment.
type TemplateItem struct {
	// Template identifier.
	Id *string `json:"id,omitempty"`
	// Template key.
	Key *string `json:"key,omitempty"`
	// Template name.
	Name *string `json:"name,omitempty"`
	// Template git repository SHA.
	GitSha *string `json:"gitSha,omitempty"`
	// Template short description.
	ShortDescription NullableString `json:"shortDescription,omitempty"`
	// Template tags.
	Tags []string `json:"tags,omitempty"`
	// Organization identifier.
	Organization NullableString `json:"organization,omitempty"`
	// Templates repository identifier.
	TemplatesRepository NullableString `json:"templatesRepository,omitempty"`
}

// NewTemplateItem instantiates a new TemplateItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateItem() *TemplateItem {
	this := TemplateItem{}
	return &this
}

// NewTemplateItemWithDefaults instantiates a new TemplateItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateItemWithDefaults() *TemplateItem {
	this := TemplateItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TemplateItem) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateItem) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TemplateItem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TemplateItem) SetId(v string) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *TemplateItem) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateItem) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *TemplateItem) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *TemplateItem) SetKey(v string) {
	o.Key = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TemplateItem) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateItem) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TemplateItem) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TemplateItem) SetName(v string) {
	o.Name = &v
}

// GetGitSha returns the GitSha field value if set, zero value otherwise.
func (o *TemplateItem) GetGitSha() string {
	if o == nil || o.GitSha == nil {
		var ret string
		return ret
	}
	return *o.GitSha
}

// GetGitShaOk returns a tuple with the GitSha field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateItem) GetGitShaOk() (*string, bool) {
	if o == nil || o.GitSha == nil {
		return nil, false
	}
	return o.GitSha, true
}

// HasGitSha returns a boolean if a field has been set.
func (o *TemplateItem) HasGitSha() bool {
	if o != nil && o.GitSha != nil {
		return true
	}

	return false
}

// SetGitSha gets a reference to the given string and assigns it to the GitSha field.
func (o *TemplateItem) SetGitSha(v string) {
	o.GitSha = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateItem) GetShortDescription() string {
	if o == nil || o.ShortDescription.Get() == nil {
		var ret string
		return ret
	}
	return *o.ShortDescription.Get()
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateItem) GetShortDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShortDescription.Get(), o.ShortDescription.IsSet()
}

// HasShortDescription returns a boolean if a field has been set.
func (o *TemplateItem) HasShortDescription() bool {
	if o != nil && o.ShortDescription.IsSet() {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given NullableString and assigns it to the ShortDescription field.
func (o *TemplateItem) SetShortDescription(v string) {
	o.ShortDescription.Set(&v)
}

// SetShortDescriptionNil sets the value for ShortDescription to be an explicit nil
func (o *TemplateItem) SetShortDescriptionNil() {
	o.ShortDescription.Set(nil)
}

// UnsetShortDescription ensures that no value is present for ShortDescription, not even an explicit nil
func (o *TemplateItem) UnsetShortDescription() {
	o.ShortDescription.Unset()
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *TemplateItem) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateItem) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *TemplateItem) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *TemplateItem) SetTags(v []string) {
	o.Tags = v
}

// GetOrganization returns the Organization field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateItem) GetOrganization() string {
	if o == nil || o.Organization.Get() == nil {
		var ret string
		return ret
	}
	return *o.Organization.Get()
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateItem) GetOrganizationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Organization.Get(), o.Organization.IsSet()
}

// HasOrganization returns a boolean if a field has been set.
func (o *TemplateItem) HasOrganization() bool {
	if o != nil && o.Organization.IsSet() {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given NullableString and assigns it to the Organization field.
func (o *TemplateItem) SetOrganization(v string) {
	o.Organization.Set(&v)
}

// SetOrganizationNil sets the value for Organization to be an explicit nil
func (o *TemplateItem) SetOrganizationNil() {
	o.Organization.Set(nil)
}

// UnsetOrganization ensures that no value is present for Organization, not even an explicit nil
func (o *TemplateItem) UnsetOrganization() {
	o.Organization.Unset()
}

// GetTemplatesRepository returns the TemplatesRepository field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TemplateItem) GetTemplatesRepository() string {
	if o == nil || o.TemplatesRepository.Get() == nil {
		var ret string
		return ret
	}
	return *o.TemplatesRepository.Get()
}

// GetTemplatesRepositoryOk returns a tuple with the TemplatesRepository field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TemplateItem) GetTemplatesRepositoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TemplatesRepository.Get(), o.TemplatesRepository.IsSet()
}

// HasTemplatesRepository returns a boolean if a field has been set.
func (o *TemplateItem) HasTemplatesRepository() bool {
	if o != nil && o.TemplatesRepository.IsSet() {
		return true
	}

	return false
}

// SetTemplatesRepository gets a reference to the given NullableString and assigns it to the TemplatesRepository field.
func (o *TemplateItem) SetTemplatesRepository(v string) {
	o.TemplatesRepository.Set(&v)
}

// SetTemplatesRepositoryNil sets the value for TemplatesRepository to be an explicit nil
func (o *TemplateItem) SetTemplatesRepositoryNil() {
	o.TemplatesRepository.Set(nil)
}

// UnsetTemplatesRepository ensures that no value is present for TemplatesRepository, not even an explicit nil
func (o *TemplateItem) UnsetTemplatesRepository() {
	o.TemplatesRepository.Unset()
}

func (o TemplateItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.GitSha != nil {
		toSerialize["gitSha"] = o.GitSha
	}
	if o.ShortDescription.IsSet() {
		toSerialize["shortDescription"] = o.ShortDescription.Get()
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Organization.IsSet() {
		toSerialize["organization"] = o.Organization.Get()
	}
	if o.TemplatesRepository.IsSet() {
		toSerialize["templatesRepository"] = o.TemplatesRepository.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableTemplateItem struct {
	value *TemplateItem
	isSet bool
}

func (v NullableTemplateItem) Get() *TemplateItem {
	return v.value
}

func (v *NullableTemplateItem) Set(val *TemplateItem) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateItem) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateItem(val *TemplateItem) *NullableTemplateItem {
	return &NullableTemplateItem{value: val, isSet: true}
}

func (v NullableTemplateItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
