/*
API Bunnyshell Environments

Interact with Bunnyshell Platform

API version: 1.1.0
Contact: osi+support@bunnyshell.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// EnvironmentItem An environment holds a collection of buildable and deployable components.
type EnvironmentItem struct {
	// Environment identifier.
	Id *string `json:"id,omitempty"`
	// Environment type: primary or ephemeral.
	Type *string `json:"type,omitempty"`
	// Environment name.
	Name *string `json:"name,omitempty"`
	// Environment k8s namespace.
	Namespace *string `json:"namespace,omitempty"`
	// Service component identifier
	TotalComponents *int32 `json:"totalComponents,omitempty"`
	// Environment operation status.
	OperationStatus *string `json:"operationStatus,omitempty"`
	// Environment cluster status.
	ClusterStatus *string `json:"clusterStatus,omitempty"`
	// Project identifier.
	Project *string `json:"project,omitempty"`
	// Kubernetes integration identifier.
	KubernetesIntegration NullableString `json:"kubernetesIntegration,omitempty"`
}

// NewEnvironmentItem instantiates a new EnvironmentItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentItem() *EnvironmentItem {
	this := EnvironmentItem{}
	return &this
}

// NewEnvironmentItemWithDefaults instantiates a new EnvironmentItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentItemWithDefaults() *EnvironmentItem {
	this := EnvironmentItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EnvironmentItem) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentItem) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EnvironmentItem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EnvironmentItem) SetId(v string) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *EnvironmentItem) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentItem) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *EnvironmentItem) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *EnvironmentItem) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *EnvironmentItem) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentItem) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *EnvironmentItem) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *EnvironmentItem) SetName(v string) {
	o.Name = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *EnvironmentItem) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentItem) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *EnvironmentItem) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *EnvironmentItem) SetNamespace(v string) {
	o.Namespace = &v
}

// GetTotalComponents returns the TotalComponents field value if set, zero value otherwise.
func (o *EnvironmentItem) GetTotalComponents() int32 {
	if o == nil || o.TotalComponents == nil {
		var ret int32
		return ret
	}
	return *o.TotalComponents
}

// GetTotalComponentsOk returns a tuple with the TotalComponents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentItem) GetTotalComponentsOk() (*int32, bool) {
	if o == nil || o.TotalComponents == nil {
		return nil, false
	}
	return o.TotalComponents, true
}

// HasTotalComponents returns a boolean if a field has been set.
func (o *EnvironmentItem) HasTotalComponents() bool {
	if o != nil && o.TotalComponents != nil {
		return true
	}

	return false
}

// SetTotalComponents gets a reference to the given int32 and assigns it to the TotalComponents field.
func (o *EnvironmentItem) SetTotalComponents(v int32) {
	o.TotalComponents = &v
}

// GetOperationStatus returns the OperationStatus field value if set, zero value otherwise.
func (o *EnvironmentItem) GetOperationStatus() string {
	if o == nil || o.OperationStatus == nil {
		var ret string
		return ret
	}
	return *o.OperationStatus
}

// GetOperationStatusOk returns a tuple with the OperationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentItem) GetOperationStatusOk() (*string, bool) {
	if o == nil || o.OperationStatus == nil {
		return nil, false
	}
	return o.OperationStatus, true
}

// HasOperationStatus returns a boolean if a field has been set.
func (o *EnvironmentItem) HasOperationStatus() bool {
	if o != nil && o.OperationStatus != nil {
		return true
	}

	return false
}

// SetOperationStatus gets a reference to the given string and assigns it to the OperationStatus field.
func (o *EnvironmentItem) SetOperationStatus(v string) {
	o.OperationStatus = &v
}

// GetClusterStatus returns the ClusterStatus field value if set, zero value otherwise.
func (o *EnvironmentItem) GetClusterStatus() string {
	if o == nil || o.ClusterStatus == nil {
		var ret string
		return ret
	}
	return *o.ClusterStatus
}

// GetClusterStatusOk returns a tuple with the ClusterStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentItem) GetClusterStatusOk() (*string, bool) {
	if o == nil || o.ClusterStatus == nil {
		return nil, false
	}
	return o.ClusterStatus, true
}

// HasClusterStatus returns a boolean if a field has been set.
func (o *EnvironmentItem) HasClusterStatus() bool {
	if o != nil && o.ClusterStatus != nil {
		return true
	}

	return false
}

// SetClusterStatus gets a reference to the given string and assigns it to the ClusterStatus field.
func (o *EnvironmentItem) SetClusterStatus(v string) {
	o.ClusterStatus = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *EnvironmentItem) GetProject() string {
	if o == nil || o.Project == nil {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentItem) GetProjectOk() (*string, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *EnvironmentItem) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *EnvironmentItem) SetProject(v string) {
	o.Project = &v
}

// GetKubernetesIntegration returns the KubernetesIntegration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EnvironmentItem) GetKubernetesIntegration() string {
	if o == nil || o.KubernetesIntegration.Get() == nil {
		var ret string
		return ret
	}
	return *o.KubernetesIntegration.Get()
}

// GetKubernetesIntegrationOk returns a tuple with the KubernetesIntegration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EnvironmentItem) GetKubernetesIntegrationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KubernetesIntegration.Get(), o.KubernetesIntegration.IsSet()
}

// HasKubernetesIntegration returns a boolean if a field has been set.
func (o *EnvironmentItem) HasKubernetesIntegration() bool {
	if o != nil && o.KubernetesIntegration.IsSet() {
		return true
	}

	return false
}

// SetKubernetesIntegration gets a reference to the given NullableString and assigns it to the KubernetesIntegration field.
func (o *EnvironmentItem) SetKubernetesIntegration(v string) {
	o.KubernetesIntegration.Set(&v)
}

// SetKubernetesIntegrationNil sets the value for KubernetesIntegration to be an explicit nil
func (o *EnvironmentItem) SetKubernetesIntegrationNil() {
	o.KubernetesIntegration.Set(nil)
}

// UnsetKubernetesIntegration ensures that no value is present for KubernetesIntegration, not even an explicit nil
func (o *EnvironmentItem) UnsetKubernetesIntegration() {
	o.KubernetesIntegration.Unset()
}

func (o EnvironmentItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if o.TotalComponents != nil {
		toSerialize["totalComponents"] = o.TotalComponents
	}
	if o.OperationStatus != nil {
		toSerialize["operationStatus"] = o.OperationStatus
	}
	if o.ClusterStatus != nil {
		toSerialize["clusterStatus"] = o.ClusterStatus
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.KubernetesIntegration.IsSet() {
		toSerialize["kubernetesIntegration"] = o.KubernetesIntegration.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironmentItem struct {
	value *EnvironmentItem
	isSet bool
}

func (v NullableEnvironmentItem) Get() *EnvironmentItem {
	return v.value
}

func (v *NullableEnvironmentItem) Set(val *EnvironmentItem) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentItem) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentItem(val *EnvironmentItem) *NullableEnvironmentItem {
	return &NullableEnvironmentItem{value: val, isSet: true}
}

func (v NullableEnvironmentItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
